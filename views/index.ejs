<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Kurt Vonnegut API</title>

    <!-- FONT -->
    <link href="//fonts.googleapis.com/css?family=Raleway:400,300,600" rel="stylesheet" type="text/css">
    <!-- CSS -->
    <link rel="stylesheet" href="css/skeleton.css">
    <link rel="stylesheet" href="css/style.css">
    <!-- FAVICON-->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
</head>

<body>
    <nav class="container">
        <ul class="navbar">
            <li><a href="#about">About</a></li>
            <li><a href="#routes">Routes</a></li>
            <li><a href="#metadata">Metadata</a></li>
            <li><a href="#filters">Filters</a></li>
            <li><a href="#examples">Examples</a></li>
            <li><a href="#usage">Usage</a></li>
        </ul>
    </nav>
    <a class="github-icon" href="https://github.com/PoorBillyPilgrim/kurt-vonnegut-api" target="_blank"
        rel="noopener"><i class="fab fa-github"></i></a>
    <div class="container header">
        <h1>Kurt Vonnegut API</h1>

        <div>
            <hr>
            <p class="quote"><em>"If this isn't nice, what is?"</em></p>
            <hr>
        </div>


        <h2>An API for Kurt Vonnegut's bibliography. <br>So it goes. SO IT GOES!</h2>
        <hr>
    </div>

    <div class="container">
        <h3 id="about">What is an API?</h3>
        <p>The Kurt Vonnegut API is a RESTful API built using Node.js, Express, MongoDB, and EJS. It was designed to
            serve metadata on Kurt Vonnegut's bibliography, currently returning information on his novels, collected
            works, and plays as <a href="https://www.json.org/json-en.html" target="_blank">JSON</a>.</p>
        <p>A <a href="https://restfulapi.net/" target="_blank">RESTful API</a> is simply computer code that uses
            HTTP to
            request services from
            a program running on another computer, often called a server. It allows anyone to access a partcular set
            of
            data using
            whatever computer language on whatever operating system. In this case, this API makes it really easy to
            get info on Kurt Vonnegut's bibliography. All you need is a <a
                href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier" target="_blank">Uniform Resource
                Identifier (URI)</a> to get the data.</p>
        <div class="row">
            <p class="intro-url">
                <a href="https://kurtvonnegutapi.com/api">
                    <span class="dark-url">
                        https://kurtvonnegutapi.com/api
                    </span>
                </a>
            </p>
        </div>
        <hr>
        <h2 id="routes">Routes</h2>
        <table>
            <thead>
                <tr>
                    <th>Endpoint</th>
                    <th>Response</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>/api</code></td>
                    <td>Kurt Vonnegut's entire bibliography for novels, collected works, and plays
                    </td>
                </tr>
                <tr>
                    <td><code>/api/novels</code></td>
                    <td>List of Vonnegut's novels</td>
                </tr>
                <tr>
                    <td><code>/api/collections</code></td>
                    <td>List of Vonnegut's collected works</td>
                </tr>
                <tr>
                    <td><code>/api/plays</code></td>
                    <td>List of Vonnegut's plays</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="container">
        <h3 id="metadata">Metadata</h3>
        <div class="row">
            <table class="four columns">
                <thead>
                    <tr>
                        <th>Form</th>
                        <th>Metadata</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Novel</td>
                        <td>
                            title<br>
                            subtitle<br>
                            form<br>
                            genre<br>
                            publisher<br>
                            year<br>
                            pages<br>
                            chapters<br>
                            setting<br>
                            characters<br>
                            wiki<br>
                        </td>
                    </tr>
            </table>
            <table class="four columns">
                <thead>
                    <tr>
                        <th>Form</th>
                        <th>Metadata</th>
                    </tr>
                </thead>
                <tr>
                    <td>Collected Work</td>
                    <td>
                        <br>
                        title<br>
                        form<br>
                        genre<br>
                        publisher<br>
                        year<br>
                        pages<br>
                        contents<br>
                        wiki<br>
                        <br>
                        <br>
                    </td>
                </tr>
            </table>
            <table class="four columns">
                <thead>
                    <tr>
                        <th>Form</th>
                        <th>Metadata</th>
                    </tr>
                </thead>
                <tr>
                    <td>Play</td>
                    <td>
                        <br>
                        title<br>
                        form<br>
                        genre<br>
                        publisher<br>
                        year<br>
                        setting<br>
                        characters<br>
                        wiki<br>
                        <br>
                        <br>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="container">
        <h3 id="filters">Filters</h3>
        <p>You can currently only filter searches using the main <code>/api</code> route, using any combination of
            title,
            form, genre, and year
            seperated by an
            ampersand
            <code>(&)</code>.
        </p>
        <div class="row filters-row">
            <a href="https://kurtvonnegutapi.com/api?title=Slaughterhouse-Five&year=1952">
                <p class="dark-url">✅ https://kurtvonnegutapi.com/api?title=Slaughterhouse-Five&year=1952
                </p>
            </a></div>
        <p>You can search using multiple filters separated by commas</p>
        <div class="row filters-row">
            <a href="https://kurtvonnegutapi.com/api?year=1952,1969">
                <p class="dark-url">✅ https://kurtvonnegutapi.com/api?year=1952,1969</p>
            </a>
        </div>
        <p>You cannot, however, use multiple filters and different filters at the same time.</p>
        <div class="row filters-row">
            <a href="https://kurtvonnegutapi.com/api?year1952,1969&title=Breakfast of Champions">
                <p class="dark-url">❌ https://kurtvonnegutapi.com/api?year1952,1969&title=Breakfast of
                    Champions</p>
            </a>
        </div>
        <hr>
    </div>
    <div class="container">
        <h3 id="examples">Example</h3>
        <a class="button button-primary" href="https://kurtvonnegutapi.com/api?title=Slaughterhouse-Five"
            target="_blank">GET</a>
        <p class="dark-url">https://kurtvonnegutapi.com/api?title=Slaughterhouse-Five</p>
        <pre class=""><code>[
    {
        _id": "5f07523011807ba43fb805b0",
        "title": "Slaughterhouse-Five",
        "subtitle": "The Children's Crusade: A Duty-Dance with Death",
        "form": "novel",
        "genre": [
            "dark comedy",
            "satire",
            "science fiction",
            "war novel",
            "metafiction",
            "postmodernism"
        ],
        "publisher": "Delacorte",
        "year": 1969,
        "pages": 215,
        "chapters": 10,
        "setting": [
            {
                "city": "Dresden",
                "country": "Germany",
                "fictional": false
            },
            {
                "planet": "Tralfamadore",
                "fictional": true
            },
            {
                "city": "Ilium",
                "state": "New York",
                "country": "United States of America",
                "fictional": false
            },
            {
                "city": "Ardennes",
                "country": "Belgium",
                "fictional": false
            }
        ],
        "characters": [
            {
                "firstName": "Billy",
                "lastName": "Pilgrim"
            },
            {
                "firstName": "Kilgore",
                "lastName": "Trout"
            },
            {
                "firstName": "Eliot",
                "lastName": "Rosewater"
            },
            {
                "firstName": "Roland",
                "lastName": "Weary"
            },
            {
                "firstName": "Paul",
                "lastName": "Lazzaro"
            },
            {
                "firstName": "Edgar",
                "lastName": "Derby"
            },
            {
                "firstName": "Robert",
                "lastName": "Pilgrim"
            },
            {
                "firstName": "Valencia",
                "lastName": "Merble"
            },
            {
                "firstName": "Barbara",
                "lastName": "Pilgrim"
            },
            {
                "firstName": "Howard",
                "middleName": "W",
                "lastName": "Campbell",
                "suffix": "Jr"
            },
            {
                "firstName": "Montana",
                "lastName": "Wildhack"
            },
            {
                "firstName": "Bertam",
                "middleName": "Copeland",
                "lastName": "Rumfoord"
            },
            {
                "firstName": "Wild Bob"
            }
        ],
        "wiki": "https://en.wikipedia.org/wiki/Slaughterhouse-Five"
    }
]</code></pre>
    </div>

    <div class="container">
        <h3 id="usage">Usage</h3>
        <p>You can use any http library to return a JSON array of the data.</p>
        <h4>JavaScript</h4>
        <p>Below is an example using <a href="https://github.com/request/request#readme" target="_blank">Request</a>, a
            Node.js package.</p>
        <pre><code>// Request
const request = require('request');
            
request({
    url: 'https://kurtvonnegutapi.com/api?title=Slaughterhouse-Five',
    json: true
}, function (error, response, bibliography) {
    console.log(bibliography)
});

// Output
[
    {
    _id: '5f07523011807ba43fb805b0',
    title: 'Slaughterhouse-Five',
    subtitle: "the Children's Crusade: A Duty-Dance with Death",
    form: 'novel',
    genre: [
        'dark comedy',
        'satire',
        'science fiction',
        'war novel',
        'metafiction',
        'postmodernism'
    ],
    publisher: 'Delacorte',
    year: 1969,
    pages: 215,
    chapters: 10,
    setting: [ [Object], [Object], [Object], [Object] ],
    characters: [
        [Object], [Object],
        [Object], [Object],
        [Object], [Object],
        [Object], [Object],
        [Object], [Object],
        [Object], [Object],
        [Object]
    ],
    wiki: 'https://en.wikipedia.org/wiki/Slaughterhouse-Five'
    }
]

// Notice that arrays containing objects are returned as [Object]
// Use object and array notation to access
bibliography[0].characters[0]; 
/* 
{ 
    firstName: 'Billy', 
    lastName: 'Pilgrim' 
}
*/

bibilography[0].setting[0];
/*
{
    city: 'Dresden',
    country: 'Germany',
    fictional: false
}
*/</code></pre>
        <p>Some of the metadata may be useful for textual analysis. In particular,
            <code>bibliography[i].characters</code> and <code>bibliography[i].setting</code></p>
        <pre><code>// Appearances of Kilgore Trout across various novels
request({
    url: 'https://kurtvonnegutapi.com/api/novels',
    json: true
}, function (error, response, bibliography) {
    let kilgoreTroutAppearances = [];
    for (let i = 0; i < bibliography.length; i++) {
        for (let j = 0; j < bibliography[i].characters.length; j++) {
            if (bibliography[i].characters[j].firstName === "Kilgore" && bibliography[i].characters[j].lastName === "Trout") {
                kilgoreTroutAppearances.push(bibliography[i])
            }
        }
    }
    console.log(kilgoreTroutAppearances)
});
/*
[
    {
    _id: '5f07523011807ba43fb805ab',
    title: 'God Bless You, Mr. Rosewater',
    subtitle: 'Pearls Before Swine',
    form: 'novel',
    genre: [ 'satire', 'postmodernism' ],
    publisher: 'Holt, Rinehart and Winston',
    year: 1965,
    pages: 218,
    chapters: null,
    setting: [ [Object], [Object] ],
    characters: [ [Object], [Object], [Object] ],
    wiki: 'https://en.wikipedia.org/wiki/God_Bless_You,_Mr._Rosewater'
    },
    {
    ...
    }
]
*/</pre></code>
        <h4>Python</h4>
        <p><a href="https://requests.readthedocs.io/en/master/" target="_blank">Requests</a>, an HTTP library for
            Python, gives you a simple method for returning data</p>
        <pre><code># returns JSON array
import requests

response = requests.get('https://kurtvonnegutapi.com/api?title=Slaughterhouse-Five')

print(response.json())

# output
"""
[{'_id': '5f07523011807ba43fb805b0', 'title': 
'Slaughterhouse-Five', 'subtitle': "the Children's
Crusade: A Duty-Dance with Death", 'form': 'novel',
'genre': ['dark comedy', 'satire', 'science fiction', 
'war novel', 'metafiction', 'postmodernism'], 
'publisher': 'Delacorte', 'year': 1969, 'pages': 215, 
'chapters': 10, 'setting': [{'city': 'Dresden', 
'country': 'Germany', 'fictional': False}, {'planet': 
'Tralfamadore', 'fictional': True}, {'city': 'Ilium', 
'state': 'New York', 'country': 'United States of 
America', 'fictional': False}, {'city': 'Ardennes', 
'country': 'Belgium', 'fictional': False}], 
'characters': [{'firstName': 'Billy', 'lastName': 
'Pilgrim'}, {'firstName': 'Kilgore', 'lastName': 
'Trout'}, {'firstName': 'Eliot', 'lastName': 
'Rosewater'}, {'firstName': 'Roland', 'lastName': 
'Weary'}, {'firstName': 'Paul', 'lastName': 'Lazzaro'}
, {'firstName': 'Edgar', 'lastName': 'Derby'}, 
{'firstName': 'Robert', 'lastName': 'Pilgrim'}, 
{'firstName': 'Valencia', 'lastName': 'Merble'}, 
{'firstName': 'Barbara', 'lastName': 'Pilgrim'}, 
{'firstName': 'Howard', 'middleName': 'W', 'lastName': 
'Campbell', 'suffix': 'Jr'}, {'firstName': 'Montana', 
'lastName': 'Wildhack'}, {'firstName': 'Bertam', 
'middleName': 'Copeland', 'lastName': 'Rumfoord'}, 
{'firstName': 'Wild Bob'}], 'wiki': 'https://en.
wikipedia.org/wiki/Slaughterhouse-Five'}]
"""</code></pre>
    </div>
    <hr>
    <div id="footer">
        <p class="signature">Code by <a href="http://tylerjones.info" target="_blank">Tyler Jones</a> |
            2020
        </p>
        <ul class="social-media">
            <li><a class="social-media-icon" href="https://github.com/PoorBillyPilgrim" target="_blank"
                    rel="noopener"><i class="fab fa-github"></i></a></li>
            <li><a class="social-media-icon" href="https://www.linkedin.com/in/tyler-jones-2a0a84143/" target="_blank"
                    rel="noopener"><i class="fab fa-linkedin"></i></a></li>
        </ul>
    </div>
</body>

</html>